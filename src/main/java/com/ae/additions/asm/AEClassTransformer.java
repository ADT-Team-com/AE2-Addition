package com.ae.additions.asm;

import net.minecraft.launchwrapper.IClassTransformer;
import net.minecraft.launchwrapper.Launch;
import org.objectweb.asm.*;
import org.objectweb.asm.tree.*;

import java.io.File;
import java.io.PrintWriter;
import java.nio.file.Files;
import java.nio.file.OpenOption;
import java.nio.file.StandardOpenOption;
import java.util.List;

import static com.ae.additions.utils.ASMUtils.*;
import static org.objectweb.asm.Opcodes.*;

public class AEClassTransformer implements IClassTransformer {
    public static final boolean IS_DEV = (boolean) Launch.blackboard.get("fml.deobfuscatedEnvironment");

    private static byte[] transformGuiPriority(byte[] basicClass) {
        ClassNode classNode = readClass(basicClass);
        MethodNode methodNode = findMethod(classNode, "initGui", "func_73866_w_");
        if (methodNode != null) {
            AbstractInsnNode point = findSequence(methodNode.instructions, true, ALOAD, GETFIELD, IFNULL, ALOAD, IFNULL);
            if (point != null) {
                InsnList list = new InsnList();
                list.add(new VarInsnNode(ALOAD, 6));
                list.add(new VarInsnNode(ALOAD, 0));
                list.add(new FieldInsnNode(GETFIELD, "appeng/client/gui/implementations/GuiPriority", "OriginalGui", "Lappeng/core/sync/GuiBridge;"));
                list.add(new MethodInsnNode(INVOKESTATIC, "com/ae/additions/asm/AEHooks", "getGui", "(Ljava/lang/Object;Lappeng/core/sync/GuiBridge;)Lappeng/core/sync/GuiBridge;", false));
                list.add(new VarInsnNode(ALOAD, 0));
                list.add(new InsnNode(SWAP));
                list.add(new FieldInsnNode(PUTFIELD, "appeng/client/gui/implementations/GuiPriority", "OriginalGui", "Lappeng/core/sync/GuiBridge;"));

                list.add(new VarInsnNode(ALOAD, 6));
                list.add(new VarInsnNode(ALOAD, 5));
                list.add(new MethodInsnNode(INVOKESTATIC, "com/ae/additions/asm/AEHooks", "getItem", "(Ljava/lang/Object;Lnet/minecraft/item/ItemStack;)Lnet/minecraft/item/ItemStack;", false));
                list.add(new VarInsnNode(ASTORE, 5));

                methodNode.instructions.insertBefore(point, list);
            }
        }

        return writeClass(classNode);
    }

    private static byte[] transformContainerInterfaceTerminal(byte[] basicClass) {
        ClassNode classNode = readClass(basicClass);
        MethodNode methodNode = findMethod(classNode, "addItems");
        if (methodNode == null) return basicClass;
        AbstractInsnNode point = findSequence(methodNode.instructions, true, ALOAD, LDC, ALOAD, INVOKESTATIC, INVOKEVIRTUAL);
        if (point == null) return null;
        InsnList list = new InsnList();
        list.add(new VarInsnNode(ALOAD, 6));
        list.add(new LdcInsnNode("invSize"));
        list.add(new VarInsnNode(ALOAD, 2));
        list.add(new MethodInsnNode(INVOKESTATIC, "appeng/container/implementations/ContainerInterfaceTerminal$InvTracker", "access$100", "(Lappeng/container/implementations/ContainerInterfaceTerminal$InvTracker;)Lnet/minecraft/inventory/IInventory;", false));
        list.add(new MethodInsnNode(INVOKEINTERFACE, "net/minecraft/inventory/IInventory", IS_DEV ? "getSizeInventory" : "func_70302_i_", "()I", true));
        list.add(new MethodInsnNode(INVOKEVIRTUAL, "net/minecraft/nbt/NBTTagCompound", IS_DEV ? "setInteger" : "func_74768_a", "(Ljava/lang/String;I)V", false));
        methodNode.instructions.insertBefore(point, list);
        return writeClass(classNode);
    }

    private static byte[] transformGrid(byte[] basicClass) {
        ClassNode classNode = readClass(basicClass);
        MethodNode methodNode = findMethod(classNode, "getMachines");
        if (methodNode == null) return basicClass;
        List<AbstractInsnNode> points = findAllOpcodes(methodNode.instructions, ARETURN);
        if (points.isEmpty()) return basicClass;
        InsnList list = new InsnList();
        list.add(new VarInsnNode(ALOAD, 0));
        list.add(new MethodInsnNode(INVOKESTATIC, "com/ae/additions/asm/AEHooks", "getMachines", "(Lappeng/me/MachineSet;Lappeng/me/Grid;)Lappeng/api/networking/IMachineSet;", false));
        points.forEach(point -> methodNode.instructions.insertBefore(point, list));
        return writeClass(classNode);
    }

    private static byte[] transformCraftingCPUCluster(byte[] basicClass) {
        ClassNode classNode = readClass(basicClass);
        MethodNode methodNode = findMethod(classNode, "addTile");
        if (methodNode == null) return basicClass;
        AbstractInsnNode point = findSequenceLast(methodNode.instructions, true, ALOAD, DUP, GETFIELD, ICONST_1, IADD, PUTFIELD);
        if (point == null) return null;
        InsnList list = new InsnList();
        LabelNode label = new LabelNode();
        list.add(new VarInsnNode(ALOAD, 1));
        list.add(new TypeInsnNode(INSTANCEOF, "com/ae/additions/utils/IAdvancedAccelerator"));
        list.add(new JumpInsnNode(IFEQ, label));
        list.add(new VarInsnNode(ALOAD, 1));
        list.add(new TypeInsnNode(CHECKCAST, "com/ae/additions/utils/IAdvancedAccelerator"));
        list.add(new MethodInsnNode(INVOKEINTERFACE, "com/ae/additions/utils/IAdvancedAccelerator", "getAcceleratorCount", "()I", true));
        list.add(new VarInsnNode(ALOAD, 0));
        list.add(new FieldInsnNode(GETFIELD, "appeng/me/cluster/implementations/CraftingCPUCluster", "accelerator", "I"));
        list.add(new InsnNode(IADD));
        list.add(new InsnNode(ICONST_M1));
        list.add(new InsnNode(IADD));
        list.add(new VarInsnNode(ALOAD, 0));
        list.add(new InsnNode(SWAP));
        list.add(new FieldInsnNode(PUTFIELD, "appeng/me/cluster/implementations/CraftingCPUCluster", "accelerator", "I"));
        list.add(label);
        methodNode.instructions.insert(point, list);
        return writeClass(classNode);
    }

    private static byte[] transformDualityInterface(byte[] basicClass) {
        ClassNode classNode = readClass(basicClass);
        MethodNode methodNode = findMethod(classNode, "updateCraftingList");
        if (methodNode == null) return basicClass;
        classNode.interfaces.add("com/ae/additions/utils/IDualityInterface");

        InsnList list = new InsnList();
        LabelNode label = new LabelNode();
        list.add(new VarInsnNode(ALOAD, 0));
        list.add(new TypeInsnNode(CHECKCAST, "com/ae/additions/utils/IDualityInterface"));
        list.add(new MethodInsnNode(INVOKEINTERFACE, "com/ae/additions/utils/IDualityInterface", "isOverrideDefault", "()Z", true));
        list.add(new JumpInsnNode(IFEQ, label));
        list.add(new VarInsnNode(ALOAD, 0));
        list.add(new TypeInsnNode(CHECKCAST, "com/ae/additions/utils/IDualityInterface"));
        list.add(new MethodInsnNode(INVOKEINTERFACE, "com/ae/additions/utils/IDualityInterface", "updateCraftingListProxy", "()V", true));
        list.add(new InsnNode(RETURN));
        list.add(label);

        methodNode.instructions.insert(list);

        classNode.methods.add(generateGetter("getProxy", "Lappeng/me/helpers/AENetworkProxy;", GETFIELD, "appeng/helpers/DualityInterface", "gridProxy", ARETURN));
        classNode.methods.add(generateGetter("getCraftingList", "Ljava/util/List;", GETFIELD, "appeng/helpers/DualityInterface", "craftingList", ARETURN));
        classNode.methods.add(generateGetter("getIsWorking", "Z", GETFIELD, "appeng/helpers/DualityInterface", "isWorking", IRETURN));

        MethodNode generated = new MethodNode(ASM5, ACC_PUBLIC, "callAddToCraftingList", "(Lnet/minecraft/item/ItemStack;)V", null, null);
        list = generated.instructions;
        list.add(new VarInsnNode(ALOAD, 0));
        list.add(new VarInsnNode(ALOAD, 1));
        list.add(new MethodInsnNode(INVOKESPECIAL, "appeng/helpers/DualityInterface", "addToCraftingList", "(Lnet/minecraft/item/ItemStack;)V", false));
        list.add(new InsnNode(RETURN));
        classNode.methods.add(generated);

        generated = new MethodNode(ASM5, ACC_PUBLIC, "callReadConfig", "()V", null, null);
        list = generated.instructions;
        list.add(new VarInsnNode(ALOAD, 0));
        list.add(new MethodInsnNode(INVOKESPECIAL, "appeng/helpers/DualityInterface", "readConfig", "()V", false));
        list.add(new InsnNode(RETURN));
        classNode.methods.add(generated);

        generated = new MethodNode(ASM5, ACC_PUBLIC, "callUpdateCraftingList", "()V", null, null);
        list = generated.instructions;
        list.add(new VarInsnNode(ALOAD, 0));
        list.add(new MethodInsnNode(INVOKESPECIAL, "appeng/helpers/DualityInterface", "updateCraftingList", "()V", false));
        list.add(new InsnNode(RETURN));
        classNode.methods.add(generated);

        generated = new MethodNode(ASM5, ACC_PUBLIC, "callUpdatePlan", "(I)V", null, null);
        list = generated.instructions;
        list.add(new VarInsnNode(ALOAD, 0));
        list.add(new VarInsnNode(ILOAD, 1));
        list.add(new MethodInsnNode(INVOKESPECIAL, "appeng/helpers/DualityInterface", "updatePlan", "(I)V", false));
        list.add(new InsnNode(RETURN));
        classNode.methods.add(generated);

        generated = new MethodNode(ASM5, ACC_PUBLIC, "callHasWorkToDo", "()Z", null, null);
        list = generated.instructions;
        list.add(new VarInsnNode(ALOAD, 0));
        list.add(new MethodInsnNode(INVOKESPECIAL, "appeng/helpers/DualityInterface", "hasWorkToDo", "()Z", false));
        list.add(new InsnNode(IRETURN));
        classNode.methods.add(generated);
        return writeClass(classNode);
    }

    private static byte[] transformTileInterface(byte[] basicClass) {
        ClassNode classNode = readClass(basicClass);
        classNode.interfaces.add("com/ae/additions/utils/ITileInterface");
        MethodNode generated = new MethodNode(ASM5, ACC_PUBLIC, "setDuality", "(Lappeng/helpers/DualityInterface;)V", null, null);
        InsnList list = generated.instructions;
        list.add(new VarInsnNode(ALOAD, 0));
        list.add(new VarInsnNode(ALOAD, 1));
        list.add(new FieldInsnNode(PUTFIELD, "appeng/tile/misc/TileInterface", "duality", "Lappeng/helpers/DualityInterface;"));
        list.add(new InsnNode(RETURN));
        classNode.methods.add(generated);
        return writeClass(classNode);
    }

    @Override
    public byte[] transform(String name, String transformedName, byte[] basicClass) {
        switch (name) {
            case "appeng.client.gui.implementations.GuiPriority":
                return transformGuiPriority(basicClass);
            case "appeng.container.implementations.ContainerInterfaceTerminal":
                return transformContainerInterfaceTerminal(basicClass);
            case "appeng.me.Grid":
                return transformGrid(basicClass);
            case "appeng.me.cluster.implementations.CraftingCPUCluster":
                return transformCraftingCPUCluster(basicClass);
            case "appeng.helpers.DualityInterface":
                return transformDualityInterface(basicClass);
            case "appeng.tile.misc.TileInterface":
                return transformTileInterface(basicClass);
            case "appeng.client.gui.implementations.GuiInterfaceTerminal":
                return transformGuiInterfaceTerminal(basicClass);
        }
        return basicClass;
    }

    private static byte[] transformGuiInterfaceTerminal(byte[] basicClass) {
        ClassNode classNode = readClass(basicClass);
        MethodNode methodNode = findMethod(classNode, "refreshList");
        if(methodNode == null) return basicClass;
        List<AbstractInsnNode> points = findAllOpcodes(methodNode.instructions, RETURN);
        if(points.isEmpty()) return basicClass;
        InsnList list = new InsnList();
        list.add(new VarInsnNode(ALOAD,0));
        list.add(new MethodInsnNode(INVOKESPECIAL, "appeng/client/gui/implementations/GuiInterfaceTerminal", "refreshListMixin", "()V", false));
        points.forEach(point -> methodNode.instructions.insertBefore(point, list));
        classNode.fields.add(new FieldNode(ACC_PRIVATE | ACC_FINAL, "counts", "Ljava/util/HashMap;", "Ljava/util/HashMap<Ljava/lang/Integer;Ljava/lang/Integer;>;", null));
        ClassWriter classWriter = new ClassWriter(ClassWriter.COMPUTE_FRAMES | ClassWriter.COMPUTE_MAXS);
        MethodVisitor methodVisitor;
        {
            methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "<init>", "(Lnet/minecraft/inventory/Container;)V", null, null);
            methodVisitor.visitCode();
            methodVisitor.visitInsn(RETURN);
            methodVisitor.visitEnd();
        }
        {
            methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "postUpdate", "(Lnet/minecraft/nbt/NBTTagCompound;)V", null, null);
            methodVisitor.visitCode();
            Label label0 = new Label();
            Label label1 = new Label();
            Label label2 = new Label();
            methodVisitor.visitTryCatchBlock(label0, label1, label2, "java/lang/NumberFormatException");
            Label label3 = new Label();
            methodVisitor.visitLabel(label3);
            methodVisitor.visitLineNumber(61, label3);
            methodVisitor.visitVarInsn(ALOAD, 1);
            methodVisitor.visitLdcInsn("clear");
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/nbt/NBTTagCompound", "getBoolean", "(Ljava/lang/String;)Z", false);
            Label label4 = new Label();
            methodVisitor.visitJumpInsn(IFEQ, label4);
            Label label5 = new Label();
            methodVisitor.visitLabel(label5);
            methodVisitor.visitLineNumber(62, label5);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "appeng/client/gui/implementations/GuiInterfaceTerminal", "byId", "Ljava/util/HashMap;");
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/util/HashMap", "clear", "()V", false);
            Label label6 = new Label();
            methodVisitor.visitLabel(label6);
            methodVisitor.visitLineNumber(63, label6);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitInsn(ICONST_1);
            methodVisitor.visitFieldInsn(PUTFIELD, "appeng/client/gui/implementations/GuiInterfaceTerminal", "refreshList", "Z");
            methodVisitor.visitLabel(label4);
            methodVisitor.visitLineNumber(66, label4);
            methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            methodVisitor.visitVarInsn(ALOAD, 1);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/nbt/NBTTagCompound", "func_150296_c", "()Ljava/util/Set;", false);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/util/Set", "iterator", "()Ljava/util/Iterator;", true);
            methodVisitor.visitVarInsn(ASTORE, 2);
            Label label7 = new Label();
            methodVisitor.visitLabel(label7);
            methodVisitor.visitFrame(Opcodes.F_APPEND, 1, new Object[]{"java/util/Iterator"}, 0, null);
            methodVisitor.visitVarInsn(ALOAD, 2);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/util/Iterator", "hasNext", "()Z", true);
            Label label8 = new Label();
            methodVisitor.visitJumpInsn(IFEQ, label8);
            methodVisitor.visitVarInsn(ALOAD, 2);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/util/Iterator", "next", "()Ljava/lang/Object;", true);
            methodVisitor.visitVarInsn(ASTORE, 3);
            Label label9 = new Label();
            methodVisitor.visitLabel(label9);
            methodVisitor.visitLineNumber(67, label9);
            methodVisitor.visitVarInsn(ALOAD, 3);
            methodVisitor.visitTypeInsn(CHECKCAST, "java/lang/String");
            methodVisitor.visitVarInsn(ASTORE, 4);
            Label label10 = new Label();
            methodVisitor.visitLabel(label10);
            methodVisitor.visitLineNumber(68, label10);
            methodVisitor.visitVarInsn(ALOAD, 4);
            methodVisitor.visitLdcInsn("=");
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "startsWith", "(Ljava/lang/String;)Z", false);
            Label label11 = new Label();
            methodVisitor.visitJumpInsn(IFEQ, label11);
            methodVisitor.visitLabel(label0);
            methodVisitor.visitLineNumber(70, label0);
            methodVisitor.visitVarInsn(ALOAD, 4);
            methodVisitor.visitInsn(ICONST_1);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "substring", "(I)Ljava/lang/String;", false);
            methodVisitor.visitIntInsn(BIPUSH, 36);
            methodVisitor.visitMethodInsn(INVOKESTATIC, "java/lang/Long", "parseLong", "(Ljava/lang/String;I)J", false);
            methodVisitor.visitVarInsn(LSTORE, 5);
            Label label12 = new Label();
            methodVisitor.visitLabel(label12);
            methodVisitor.visitLineNumber(71, label12);
            methodVisitor.visitVarInsn(ALOAD, 1);
            methodVisitor.visitVarInsn(ALOAD, 4);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/nbt/NBTTagCompound", "getCompoundTag", "(Ljava/lang/String;)Lnet/minecraft/nbt/NBTTagCompound;", false);
            methodVisitor.visitVarInsn(ASTORE, 7);
            Label label13 = new Label();
            methodVisitor.visitLabel(label13);
            methodVisitor.visitLineNumber(72, label13);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitVarInsn(LLOAD, 5);
            methodVisitor.visitVarInsn(ALOAD, 7);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "appeng/client/gui/implementations/GuiInterfaceTerminal", "getByIdExtended", "(JLnet/minecraft/nbt/NBTTagCompound;)Lappeng/client/me/ClientDCInternalInv;", false);
            methodVisitor.visitVarInsn(ASTORE, 8);
            Label label14 = new Label();
            methodVisitor.visitLabel(label14);
            methodVisitor.visitLineNumber(74, label14);
            methodVisitor.visitInsn(ICONST_0);
            methodVisitor.visitVarInsn(ISTORE, 9);
            Label label15 = new Label();
            methodVisitor.visitLabel(label15);
            methodVisitor.visitFrame(Opcodes.F_FULL, 9, new Object[]{"appeng/client/gui/implementations/GuiInterfaceTerminal", "net/minecraft/nbt/NBTTagCompound", "java/util/Iterator", "java/lang/Object", "java/lang/String", Opcodes.LONG, "net/minecraft/nbt/NBTTagCompound", "appeng/client/me/ClientDCInternalInv", Opcodes.INTEGER}, 0, new Object[]{});
            methodVisitor.visitVarInsn(ILOAD, 9);
            methodVisitor.visitVarInsn(ALOAD, 8);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "appeng/client/me/ClientDCInternalInv", "getInventory", "()Lappeng/tile/inventory/AppEngInternalInventory;", false);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "appeng/tile/inventory/AppEngInternalInventory", "getSizeInventory", "()I", false);
            methodVisitor.visitJumpInsn(IF_ICMPGE, label1);
            Label label16 = new Label();
            methodVisitor.visitLabel(label16);
            methodVisitor.visitLineNumber(75, label16);
            methodVisitor.visitVarInsn(ILOAD, 9);
            methodVisitor.visitMethodInsn(INVOKESTATIC, "java/lang/Integer", "toString", "(I)Ljava/lang/String;", false);
            methodVisitor.visitVarInsn(ASTORE, 10);
            Label label17 = new Label();
            methodVisitor.visitLabel(label17);
            methodVisitor.visitLineNumber(76, label17);
            methodVisitor.visitVarInsn(ALOAD, 7);
            methodVisitor.visitVarInsn(ALOAD, 10);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/nbt/NBTTagCompound", "hasKey", "(Ljava/lang/String;)Z", false);
            Label label18 = new Label();
            methodVisitor.visitJumpInsn(IFEQ, label18);
            Label label19 = new Label();
            methodVisitor.visitLabel(label19);
            methodVisitor.visitLineNumber(77, label19);
            methodVisitor.visitVarInsn(ALOAD, 8);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "appeng/client/me/ClientDCInternalInv", "getInventory", "()Lappeng/tile/inventory/AppEngInternalInventory;", false);
            methodVisitor.visitVarInsn(ILOAD, 9);
            methodVisitor.visitVarInsn(ALOAD, 7);
            methodVisitor.visitVarInsn(ALOAD, 10);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/nbt/NBTTagCompound", "getCompoundTag", "(Ljava/lang/String;)Lnet/minecraft/nbt/NBTTagCompound;", false);
            methodVisitor.visitMethodInsn(INVOKESTATIC, "net/minecraft/item/ItemStack", "loadItemStackFromNBT", "(Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/item/ItemStack;", false);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "appeng/tile/inventory/AppEngInternalInventory", "setInventorySlotContents", "(ILnet/minecraft/item/ItemStack;)V", false);
            methodVisitor.visitLabel(label18);
            methodVisitor.visitLineNumber(74, label18);
            methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            methodVisitor.visitIincInsn(9, 1);
            methodVisitor.visitJumpInsn(GOTO, label15);
            methodVisitor.visitLabel(label1);
            methodVisitor.visitLineNumber(81, label1);
            methodVisitor.visitFrame(Opcodes.F_FULL, 5, new Object[]{"appeng/client/gui/implementations/GuiInterfaceTerminal", "net/minecraft/nbt/NBTTagCompound", "java/util/Iterator", "java/lang/Object", "java/lang/String"}, 0, new Object[]{});
            methodVisitor.visitJumpInsn(GOTO, label11);
            methodVisitor.visitLabel(label2);
            methodVisitor.visitLineNumber(80, label2);
            methodVisitor.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[]{"java/lang/NumberFormatException"});
            methodVisitor.visitVarInsn(ASTORE, 5);
            methodVisitor.visitLabel(label11);
            methodVisitor.visitLineNumber(83, label11);
            methodVisitor.visitFrame(Opcodes.F_CHOP, 2, null, 0, null);
            methodVisitor.visitJumpInsn(GOTO, label7);
            methodVisitor.visitLabel(label8);
            methodVisitor.visitLineNumber(85, label8);
            methodVisitor.visitFrame(Opcodes.F_CHOP, 1, null, 0, null);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "appeng/client/gui/implementations/GuiInterfaceTerminal", "refreshList", "Z");
            Label label20 = new Label();
            methodVisitor.visitJumpInsn(IFEQ, label20);
            Label label21 = new Label();
            methodVisitor.visitLabel(label21);
            methodVisitor.visitLineNumber(86, label21);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitInsn(ICONST_0);
            methodVisitor.visitFieldInsn(PUTFIELD, "appeng/client/gui/implementations/GuiInterfaceTerminal", "refreshList", "Z");
            Label label22 = new Label();
            methodVisitor.visitLabel(label22);
            methodVisitor.visitLineNumber(87, label22);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "appeng/client/gui/implementations/GuiInterfaceTerminal", "cachedSearches", "Ljava/util/Map;");
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/util/Map", "clear", "()V", true);
            Label label23 = new Label();
            methodVisitor.visitLabel(label23);
            methodVisitor.visitLineNumber(88, label23);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "appeng/client/gui/implementations/GuiInterfaceTerminal", "refreshList", "()V", false);
            methodVisitor.visitLabel(label20);
            methodVisitor.visitLineNumber(90, label20);
            methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            methodVisitor.visitInsn(RETURN);
            Label label24 = new Label();
            methodVisitor.visitLabel(label24);
            methodVisitor.visitLocalVariable("which", "Ljava/lang/String;", null, label17, label18, 10);
            methodVisitor.visitLocalVariable("x", "I", null, label15, label1, 9);
            methodVisitor.visitLocalVariable("id", "J", null, label12, label1, 5);
            methodVisitor.visitLocalVariable("invData", "Lnet/minecraft/nbt/NBTTagCompound;", null, label13, label1, 7);
            methodVisitor.visitLocalVariable("current", "Lappeng/client/me/ClientDCInternalInv;", null, label14, label1, 8);
            methodVisitor.visitLocalVariable("key", "Ljava/lang/String;", null, label10, label11, 4);
            methodVisitor.visitLocalVariable("oKey", "Ljava/lang/Object;", null, label9, label11, 3);
            methodVisitor.visitLocalVariable("this", "Lappeng/client/gui/implementations/GuiInterfaceTerminal;", null, label3, label24, 0);
            methodVisitor.visitLocalVariable("in", "Lnet/minecraft/nbt/NBTTagCompound;", null, label3, label24, 1);
            //methodVisitor.visitMaxs(4, 11);
            methodVisitor.visitEnd();
        }
        {
            methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "getByIdExtended", "(JLnet/minecraft/nbt/NBTTagCompound;)Lappeng/client/me/ClientDCInternalInv;", null, null);
            methodVisitor.visitCode();
            Label label0 = new Label();
            methodVisitor.visitLabel(label0);
            methodVisitor.visitLineNumber(93, label0);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "appeng/client/gui/implementations/GuiInterfaceTerminal", "byId", "Ljava/util/HashMap;");
            methodVisitor.visitVarInsn(LLOAD, 1);
            methodVisitor.visitMethodInsn(INVOKESTATIC, "java/lang/Long", "valueOf", "(J)Ljava/lang/Long;", false);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/util/HashMap", "get", "(Ljava/lang/Object;)Ljava/lang/Object;", false);
            methodVisitor.visitTypeInsn(CHECKCAST, "appeng/client/me/ClientDCInternalInv");
            methodVisitor.visitVarInsn(ASTORE, 4);
            Label label1 = new Label();
            methodVisitor.visitLabel(label1);
            methodVisitor.visitLineNumber(95, label1);
            methodVisitor.visitVarInsn(ALOAD, 4);
            Label label2 = new Label();
            methodVisitor.visitJumpInsn(IFNONNULL, label2);
            Label label3 = new Label();
            methodVisitor.visitLabel(label3);
            methodVisitor.visitLineNumber(96, label3);
            methodVisitor.visitVarInsn(ALOAD, 3);
            methodVisitor.visitLdcInsn("invSize");
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/nbt/NBTTagCompound", "hasKey", "(Ljava/lang/String;)Z", false);
            Label label4 = new Label();
            methodVisitor.visitJumpInsn(IFEQ, label4);
            methodVisitor.visitVarInsn(ALOAD, 3);
            methodVisitor.visitLdcInsn("invSize");
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/nbt/NBTTagCompound", "getInteger", "(Ljava/lang/String;)I", false);
            Label label5 = new Label();
            methodVisitor.visitJumpInsn(GOTO, label5);
            methodVisitor.visitLabel(label4);
            methodVisitor.visitFrame(Opcodes.F_APPEND, 1, new Object[]{"appeng/client/me/ClientDCInternalInv"}, 0, null);
            methodVisitor.visitIntInsn(BIPUSH, 9);
            methodVisitor.visitLabel(label5);
            methodVisitor.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[]{Opcodes.INTEGER});
            methodVisitor.visitVarInsn(ISTORE, 5);
            Label label6 = new Label();
            methodVisitor.visitLabel(label6);
            methodVisitor.visitLineNumber(97, label6);
            methodVisitor.visitVarInsn(ILOAD, 5);
            methodVisitor.visitIntInsn(BIPUSH, 9);
            methodVisitor.visitInsn(IREM);
            Label label7 = new Label();
            methodVisitor.visitJumpInsn(IFNE, label7);
            Label label8 = new Label();
            methodVisitor.visitLabel(label8);
            methodVisitor.visitLineNumber(98, label8);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "appeng/client/gui/implementations/GuiInterfaceTerminal", "counts", "Ljava/util/HashMap;");
            methodVisitor.visitVarInsn(ILOAD, 5);
            methodVisitor.visitIntInsn(BIPUSH, 9);
            methodVisitor.visitInsn(IDIV);
            methodVisitor.visitMethodInsn(INVOKESTATIC, "java/lang/Integer", "valueOf", "(I)Ljava/lang/Integer;", false);
            methodVisitor.visitInsn(ICONST_0);
            methodVisitor.visitMethodInsn(INVOKESTATIC, "java/lang/Integer", "valueOf", "(I)Ljava/lang/Integer;", false);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/util/HashMap", "getOrDefault", "(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", false);
            methodVisitor.visitTypeInsn(CHECKCAST, "java/lang/Integer");
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Integer", "intValue", "()I", false);
            methodVisitor.visitVarInsn(ISTORE, 6);
            Label label9 = new Label();
            methodVisitor.visitLabel(label9);
            methodVisitor.visitLineNumber(99, label9);
            methodVisitor.visitIincInsn(6, 1);
            Label label10 = new Label();
            methodVisitor.visitLabel(label10);
            methodVisitor.visitLineNumber(100, label10);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "appeng/client/gui/implementations/GuiInterfaceTerminal", "counts", "Ljava/util/HashMap;");
            methodVisitor.visitVarInsn(ILOAD, 5);
            methodVisitor.visitIntInsn(BIPUSH, 9);
            methodVisitor.visitInsn(IDIV);
            methodVisitor.visitMethodInsn(INVOKESTATIC, "java/lang/Integer", "valueOf", "(I)Ljava/lang/Integer;", false);
            methodVisitor.visitVarInsn(ILOAD, 6);
            methodVisitor.visitMethodInsn(INVOKESTATIC, "java/lang/Integer", "valueOf", "(I)Ljava/lang/Integer;", false);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/util/HashMap", "put", "(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", false);
            methodVisitor.visitInsn(POP);
            methodVisitor.visitLabel(label7);
            methodVisitor.visitLineNumber(103, label7);
            methodVisitor.visitFrame(Opcodes.F_APPEND, 1, new Object[]{Opcodes.INTEGER}, 0, null);
            methodVisitor.visitVarInsn(ALOAD, 3);
            methodVisitor.visitLdcInsn("sortBy");
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/nbt/NBTTagCompound", "getLong", "(Ljava/lang/String;)J", false);
            methodVisitor.visitVarInsn(LSTORE, 6);
            Label label11 = new Label();
            methodVisitor.visitLabel(label11);
            methodVisitor.visitLineNumber(104, label11);
            methodVisitor.visitVarInsn(ALOAD, 3);
            methodVisitor.visitLdcInsn("un");
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/nbt/NBTTagCompound", "getString", "(Ljava/lang/String;)Ljava/lang/String;", false);
            methodVisitor.visitVarInsn(ASTORE, 8);
            Label label12 = new Label();
            methodVisitor.visitLabel(label12);
            methodVisitor.visitLineNumber(105, label12);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "appeng/client/gui/implementations/GuiInterfaceTerminal", "byId", "Ljava/util/HashMap;");
            methodVisitor.visitVarInsn(LLOAD, 1);
            methodVisitor.visitMethodInsn(INVOKESTATIC, "java/lang/Long", "valueOf", "(J)Ljava/lang/Long;", false);
            methodVisitor.visitTypeInsn(NEW, "appeng/client/me/ClientDCInternalInv");
            methodVisitor.visitInsn(DUP);
            methodVisitor.visitVarInsn(ILOAD, 5);
            methodVisitor.visitVarInsn(LLOAD, 1);
            methodVisitor.visitVarInsn(LLOAD, 6);
            methodVisitor.visitVarInsn(ALOAD, 8);
            methodVisitor.visitMethodInsn(INVOKESPECIAL, "appeng/client/me/ClientDCInternalInv", "<init>", "(IJJLjava/lang/String;)V", false);
            methodVisitor.visitInsn(DUP);
            methodVisitor.visitVarInsn(ASTORE, 4);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/util/HashMap", "put", "(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", false);
            methodVisitor.visitInsn(POP);
            Label label13 = new Label();
            methodVisitor.visitLabel(label13);
            methodVisitor.visitLineNumber(106, label13);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitInsn(ICONST_1);
            methodVisitor.visitFieldInsn(PUTFIELD, "appeng/client/gui/implementations/GuiInterfaceTerminal", "refreshList", "Z");
            methodVisitor.visitLabel(label2);
            methodVisitor.visitLineNumber(109, label2);
            methodVisitor.visitFrame(Opcodes.F_CHOP, 1, null, 0, null);
            methodVisitor.visitVarInsn(ALOAD, 4);
            methodVisitor.visitInsn(ARETURN);
            Label label14 = new Label();
            methodVisitor.visitLabel(label14);
            methodVisitor.visitLocalVariable("count", "I", null, label9, label7, 6);
            methodVisitor.visitLocalVariable("size", "I", null, label6, label2, 5);
            methodVisitor.visitLocalVariable("sortBy", "J", null, label11, label2, 6);
            methodVisitor.visitLocalVariable("string", "Ljava/lang/String;", null, label12, label2, 8);
            methodVisitor.visitLocalVariable("this", "Lappeng/client/gui/implementations/GuiInterfaceTerminal;", null, label0, label14, 0);
            methodVisitor.visitLocalVariable("id", "J", null, label0, label14, 1);
            methodVisitor.visitLocalVariable("data", "Lnet/minecraft/nbt/NBTTagCompound;", null, label0, label14, 3);
            methodVisitor.visitLocalVariable("o", "Lappeng/client/me/ClientDCInternalInv;", null, label1, label14, 4);
            //methodVisitor.visitMaxs(10, 9);
            methodVisitor.visitEnd();
        }
        {
            methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "drawFG", "(IIII)V", null, null);
            methodVisitor.visitCode();
            Label label0 = new Label();
            methodVisitor.visitLabel(label0);
            methodVisitor.visitLineNumber(115, label0);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "appeng/client/gui/implementations/GuiInterfaceTerminal", "fontRendererObj", "Lnet/minecraft/client/gui/FontRenderer;");
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETSTATIC, "appeng/core/localization/GuiText", "InterfaceTerminal", "Lappeng/core/localization/GuiText;");
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "appeng/core/localization/GuiText", "getLocal", "()Ljava/lang/String;", false);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "appeng/client/gui/implementations/GuiInterfaceTerminal", "getGuiDisplayName", "(Ljava/lang/String;)Ljava/lang/String;", false);
            methodVisitor.visitIntInsn(BIPUSH, 8);
            methodVisitor.visitIntInsn(BIPUSH, 6);
            methodVisitor.visitLdcInsn(new Integer(4210752));
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/client/gui/FontRenderer", "drawString", "(Ljava/lang/String;III)I", false);
            methodVisitor.visitInsn(POP);
            Label label1 = new Label();
            methodVisitor.visitLabel(label1);
            methodVisitor.visitLineNumber(116, label1);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "appeng/client/gui/implementations/GuiInterfaceTerminal", "fontRendererObj", "Lnet/minecraft/client/gui/FontRenderer;");
            methodVisitor.visitFieldInsn(GETSTATIC, "appeng/core/localization/GuiText", "inventory", "Lappeng/core/localization/GuiText;");
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "appeng/core/localization/GuiText", "getLocal", "()Ljava/lang/String;", false);
            methodVisitor.visitIntInsn(BIPUSH, 8);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "appeng/client/gui/implementations/GuiInterfaceTerminal", "ySize", "I");
            methodVisitor.visitIntInsn(BIPUSH, 96);
            methodVisitor.visitInsn(ISUB);
            methodVisitor.visitInsn(ICONST_3);
            methodVisitor.visitInsn(IADD);
            methodVisitor.visitLdcInsn(new Integer(4210752));
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/client/gui/FontRenderer", "drawString", "(Ljava/lang/String;III)I", false);
            methodVisitor.visitInsn(POP);
            Label label2 = new Label();
            methodVisitor.visitLabel(label2);
            methodVisitor.visitLineNumber(118, label2);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "appeng/client/gui/implementations/GuiInterfaceTerminal", "getScrollBar", "()Lappeng/client/gui/widgets/GuiScrollbar;", false);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "appeng/client/gui/widgets/GuiScrollbar", "getCurrentScroll", "()I", false);
            methodVisitor.visitVarInsn(ISTORE, 5);
            Label label3 = new Label();
            methodVisitor.visitLabel(label3);
            methodVisitor.visitLineNumber(120, label3);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "appeng/client/gui/implementations/GuiInterfaceTerminal", "inventorySlots", "Lnet/minecraft/inventory/Container;");
            methodVisitor.visitFieldInsn(GETFIELD, "net/minecraft/inventory/Container", "inventorySlots", "Ljava/util/List;");
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "iterator", "()Ljava/util/Iterator;", true);
            methodVisitor.visitVarInsn(ASTORE, 6);
            Label label4 = new Label();
            methodVisitor.visitLabel(label4);
            methodVisitor.visitLineNumber(121, label4);
            methodVisitor.visitFrame(Opcodes.F_APPEND, 2, new Object[]{Opcodes.INTEGER, "java/util/Iterator"}, 0, null);
            methodVisitor.visitVarInsn(ALOAD, 6);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/util/Iterator", "hasNext", "()Z", true);
            Label label5 = new Label();
            methodVisitor.visitJumpInsn(IFEQ, label5);
            Label label6 = new Label();
            methodVisitor.visitLabel(label6);
            methodVisitor.visitLineNumber(122, label6);
            methodVisitor.visitVarInsn(ALOAD, 6);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/util/Iterator", "next", "()Ljava/lang/Object;", true);
            methodVisitor.visitVarInsn(ASTORE, 7);
            Label label7 = new Label();
            methodVisitor.visitLabel(label7);
            methodVisitor.visitLineNumber(123, label7);
            methodVisitor.visitVarInsn(ALOAD, 7);
            methodVisitor.visitTypeInsn(INSTANCEOF, "appeng/client/me/SlotDisconnected");
            Label label8 = new Label();
            methodVisitor.visitJumpInsn(IFEQ, label8);
            Label label9 = new Label();
            methodVisitor.visitLabel(label9);
            methodVisitor.visitLineNumber(124, label9);
            methodVisitor.visitVarInsn(ALOAD, 6);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/util/Iterator", "remove", "()V", true);
            methodVisitor.visitLabel(label8);
            methodVisitor.visitLineNumber(126, label8);
            methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            methodVisitor.visitJumpInsn(GOTO, label4);
            methodVisitor.visitLabel(label5);
            methodVisitor.visitLineNumber(127, label5);
            methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            methodVisitor.visitInsn(ICONST_0);
            methodVisitor.visitVarInsn(ISTORE, 7);
            Label label10 = new Label();
            methodVisitor.visitLabel(label10);
            methodVisitor.visitLineNumber(128, label10);
            methodVisitor.visitIntInsn(BIPUSH, 17);
            methodVisitor.visitVarInsn(ISTORE, 8);
            Label label11 = new Label();
            methodVisitor.visitLabel(label11);
            methodVisitor.visitLineNumber(129, label11);
            methodVisitor.visitInsn(ICONST_0);
            methodVisitor.visitVarInsn(ISTORE, 9);
            Label label12 = new Label();
            methodVisitor.visitLabel(label12);
            methodVisitor.visitFrame(Opcodes.F_APPEND, 3, new Object[]{Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER}, 0, null);
            methodVisitor.visitVarInsn(ILOAD, 9);
            methodVisitor.visitVarInsn(ILOAD, 7);
            methodVisitor.visitInsn(IADD);
            methodVisitor.visitFieldInsn(GETSTATIC, "appeng/client/gui/implementations/GuiInterfaceTerminal", "LINES_ON_PAGE", "I");
            Label label13 = new Label();
            methodVisitor.visitJumpInsn(IF_ICMPGE, label13);
            methodVisitor.visitVarInsn(ILOAD, 5);
            methodVisitor.visitVarInsn(ILOAD, 9);
            methodVisitor.visitInsn(IADD);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "appeng/client/gui/implementations/GuiInterfaceTerminal", "lines", "Ljava/util/ArrayList;");
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/util/ArrayList", "size", "()I", false);
            methodVisitor.visitJumpInsn(IF_ICMPGE, label13);
            Label label14 = new Label();
            methodVisitor.visitLabel(label14);
            methodVisitor.visitLineNumber(130, label14);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "appeng/client/gui/implementations/GuiInterfaceTerminal", "lines", "Ljava/util/ArrayList;");
            methodVisitor.visitVarInsn(ILOAD, 5);
            methodVisitor.visitVarInsn(ILOAD, 9);
            methodVisitor.visitInsn(IADD);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/util/ArrayList", "get", "(I)Ljava/lang/Object;", false);
            methodVisitor.visitVarInsn(ASTORE, 10);
            Label label15 = new Label();
            methodVisitor.visitLabel(label15);
            methodVisitor.visitLineNumber(131, label15);
            methodVisitor.visitVarInsn(ALOAD, 10);
            methodVisitor.visitTypeInsn(INSTANCEOF, "appeng/client/me/ClientDCInternalInv");
            Label label16 = new Label();
            methodVisitor.visitJumpInsn(IFEQ, label16);
            Label label17 = new Label();
            methodVisitor.visitLabel(label17);
            methodVisitor.visitLineNumber(132, label17);
            methodVisitor.visitVarInsn(ALOAD, 10);
            methodVisitor.visitTypeInsn(CHECKCAST, "appeng/client/me/ClientDCInternalInv");
            methodVisitor.visitVarInsn(ASTORE, 11);
            Label label18 = new Label();
            methodVisitor.visitLabel(label18);
            methodVisitor.visitLineNumber(133, label18);
            methodVisitor.visitVarInsn(ALOAD, 11);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "appeng/client/me/ClientDCInternalInv", "getInventory", "()Lappeng/tile/inventory/AppEngInternalInventory;", false);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "appeng/tile/inventory/AppEngInternalInventory", "getSizeInventory", "()I", false);
            methodVisitor.visitVarInsn(ISTORE, 12);
            Label label19 = new Label();
            methodVisitor.visitLabel(label19);
            methodVisitor.visitLineNumber(134, label19);
            methodVisitor.visitVarInsn(ILOAD, 12);
            methodVisitor.visitIntInsn(BIPUSH, 9);
            methodVisitor.visitInsn(IREM);
            Label label20 = new Label();
            methodVisitor.visitJumpInsn(IFNE, label20);
            Label label21 = new Label();
            methodVisitor.visitLabel(label21);
            methodVisitor.visitLineNumber(135, label21);
            methodVisitor.visitVarInsn(ILOAD, 12);
            methodVisitor.visitIntInsn(BIPUSH, 9);
            methodVisitor.visitInsn(IDIV);
            methodVisitor.visitVarInsn(ISTORE, 13);
            Label label22 = new Label();
            methodVisitor.visitLabel(label22);
            methodVisitor.visitLineNumber(136, label22);
            methodVisitor.visitInsn(ICONST_0);
            methodVisitor.visitVarInsn(ISTORE, 14);
            Label label23 = new Label();
            methodVisitor.visitLabel(label23);
            methodVisitor.visitFrame(Opcodes.F_FULL, 15, new Object[]{"appeng/client/gui/implementations/GuiInterfaceTerminal", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, "java/util/Iterator", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, "java/lang/Object", "appeng/client/me/ClientDCInternalInv", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER}, 0, new Object[]{});
            methodVisitor.visitVarInsn(ILOAD, 14);
            methodVisitor.visitVarInsn(ILOAD, 13);
            Label label24 = new Label();
            methodVisitor.visitJumpInsn(IF_ICMPGE, label24);
            Label label25 = new Label();
            methodVisitor.visitLabel(label25);
            methodVisitor.visitLineNumber(137, label25);
            methodVisitor.visitVarInsn(ILOAD, 9);
            methodVisitor.visitVarInsn(ILOAD, 7);
            methodVisitor.visitInsn(IADD);
            methodVisitor.visitFieldInsn(GETSTATIC, "appeng/client/gui/implementations/GuiInterfaceTerminal", "LINES_ON_PAGE", "I");
            Label label26 = new Label();
            methodVisitor.visitJumpInsn(IF_ICMPLT, label26);
            Label label27 = new Label();
            methodVisitor.visitLabel(label27);
            methodVisitor.visitLineNumber(138, label27);
            methodVisitor.visitJumpInsn(GOTO, label24);
            methodVisitor.visitLabel(label26);
            methodVisitor.visitLineNumber(139, label26);
            methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            methodVisitor.visitInsn(ICONST_0);
            methodVisitor.visitVarInsn(ISTORE, 15);
            Label label28 = new Label();
            methodVisitor.visitLabel(label28);
            methodVisitor.visitFrame(Opcodes.F_APPEND, 1, new Object[]{Opcodes.INTEGER}, 0, null);
            methodVisitor.visitVarInsn(ILOAD, 15);
            methodVisitor.visitIntInsn(BIPUSH, 9);
            Label label29 = new Label();
            methodVisitor.visitJumpInsn(IF_ICMPGE, label29);
            Label label30 = new Label();
            methodVisitor.visitLabel(label30);
            methodVisitor.visitLineNumber(140, label30);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "appeng/client/gui/implementations/GuiInterfaceTerminal", "inventorySlots", "Lnet/minecraft/inventory/Container;");
            methodVisitor.visitFieldInsn(GETFIELD, "net/minecraft/inventory/Container", "inventorySlots", "Ljava/util/List;");
            methodVisitor.visitTypeInsn(NEW, "appeng/client/me/SlotDisconnected");
            methodVisitor.visitInsn(DUP);
            methodVisitor.visitVarInsn(ALOAD, 11);
            methodVisitor.visitVarInsn(ILOAD, 14);
            methodVisitor.visitIntInsn(BIPUSH, 9);
            methodVisitor.visitInsn(IMUL);
            methodVisitor.visitVarInsn(ILOAD, 15);
            methodVisitor.visitInsn(IADD);
            methodVisitor.visitVarInsn(ILOAD, 15);
            methodVisitor.visitIntInsn(BIPUSH, 18);
            methodVisitor.visitInsn(IMUL);
            methodVisitor.visitIntInsn(BIPUSH, 8);
            methodVisitor.visitInsn(IADD);
            methodVisitor.visitInsn(ICONST_1);
            methodVisitor.visitVarInsn(ILOAD, 8);
            methodVisitor.visitInsn(IADD);
            methodVisitor.visitMethodInsn(INVOKESPECIAL, "appeng/client/me/SlotDisconnected", "<init>", "(Lappeng/client/me/ClientDCInternalInv;III)V", false);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "add", "(Ljava/lang/Object;)Z", true);
            methodVisitor.visitInsn(POP);
            Label label31 = new Label();
            methodVisitor.visitLabel(label31);
            methodVisitor.visitLineNumber(139, label31);
            methodVisitor.visitIincInsn(15, 1);
            methodVisitor.visitJumpInsn(GOTO, label28);
            methodVisitor.visitLabel(label29);
            methodVisitor.visitLineNumber(142, label29);
            methodVisitor.visitFrame(Opcodes.F_CHOP, 1, null, 0, null);
            methodVisitor.visitIincInsn(7, 1);
            Label label32 = new Label();
            methodVisitor.visitLabel(label32);
            methodVisitor.visitLineNumber(143, label32);
            methodVisitor.visitIincInsn(8, 18);
            Label label33 = new Label();
            methodVisitor.visitLabel(label33);
            methodVisitor.visitLineNumber(136, label33);
            methodVisitor.visitIincInsn(14, 1);
            methodVisitor.visitJumpInsn(GOTO, label23);
            methodVisitor.visitLabel(label24);
            methodVisitor.visitLineNumber(145, label24);
            methodVisitor.visitFrame(Opcodes.F_CHOP, 1, null, 0, null);
            methodVisitor.visitIincInsn(7, -1);
            Label label34 = new Label();
            methodVisitor.visitLabel(label34);
            methodVisitor.visitLineNumber(146, label34);
            methodVisitor.visitIincInsn(8, -18);
            methodVisitor.visitLabel(label20);
            methodVisitor.visitLineNumber(148, label20);
            methodVisitor.visitFrame(Opcodes.F_CHOP, 3, null, 0, null);
            Label label35 = new Label();
            methodVisitor.visitJumpInsn(GOTO, label35);
            methodVisitor.visitLabel(label16);
            methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            methodVisitor.visitVarInsn(ALOAD, 10);
            methodVisitor.visitTypeInsn(INSTANCEOF, "java/lang/String");
            methodVisitor.visitJumpInsn(IFEQ, label35);
            Label label36 = new Label();
            methodVisitor.visitLabel(label36);
            methodVisitor.visitLineNumber(149, label36);
            methodVisitor.visitVarInsn(ALOAD, 10);
            methodVisitor.visitTypeInsn(CHECKCAST, "java/lang/String");
            methodVisitor.visitVarInsn(ASTORE, 11);
            Label label37 = new Label();
            methodVisitor.visitLabel(label37);
            methodVisitor.visitLineNumber(150, label37);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "appeng/client/gui/implementations/GuiInterfaceTerminal", "byName", "Lcom/google/common/collect/HashMultimap;");
            methodVisitor.visitVarInsn(ALOAD, 11);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/google/common/collect/HashMultimap", "get", "(Ljava/lang/Object;)Ljava/util/Set;", false);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/util/Set", "size", "()I", true);
            methodVisitor.visitVarInsn(ISTORE, 12);
            Label label38 = new Label();
            methodVisitor.visitLabel(label38);
            methodVisitor.visitLineNumber(151, label38);
            methodVisitor.visitVarInsn(ILOAD, 12);
            methodVisitor.visitInsn(ICONST_1);
            Label label39 = new Label();
            methodVisitor.visitJumpInsn(IF_ICMPLE, label39);
            Label label40 = new Label();
            methodVisitor.visitLabel(label40);
            methodVisitor.visitLineNumber(152, label40);
            methodVisitor.visitTypeInsn(NEW, "java/lang/StringBuilder");
            methodVisitor.visitInsn(DUP);
            methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/lang/StringBuilder", "<init>", "()V", false);
            methodVisitor.visitVarInsn(ALOAD, 11);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
            methodVisitor.visitLdcInsn(" (");
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
            methodVisitor.visitVarInsn(ILOAD, 12);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(I)Ljava/lang/StringBuilder;", false);
            methodVisitor.visitIntInsn(BIPUSH, 41);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(C)Ljava/lang/StringBuilder;", false);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "toString", "()Ljava/lang/String;", false);
            methodVisitor.visitVarInsn(ASTORE, 11);
            methodVisitor.visitLabel(label39);
            methodVisitor.visitLineNumber(155, label39);
            methodVisitor.visitFrame(Opcodes.F_APPEND, 2, new Object[]{"java/lang/String", Opcodes.INTEGER}, 0, null);
            methodVisitor.visitVarInsn(ALOAD, 11);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "length", "()I", false);
            methodVisitor.visitInsn(ICONST_2);
            Label label41 = new Label();
            methodVisitor.visitJumpInsn(IF_ICMPLE, label41);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "appeng/client/gui/implementations/GuiInterfaceTerminal", "fontRendererObj", "Lnet/minecraft/client/gui/FontRenderer;");
            methodVisitor.visitVarInsn(ALOAD, 11);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/client/gui/FontRenderer", "getStringWidth", "(Ljava/lang/String;)I", false);
            methodVisitor.visitIntInsn(SIPUSH, 155);
            methodVisitor.visitJumpInsn(IF_ICMPLE, label41);
            Label label42 = new Label();
            methodVisitor.visitLabel(label42);
            methodVisitor.visitLineNumber(156, label42);
            methodVisitor.visitVarInsn(ALOAD, 11);
            methodVisitor.visitInsn(ICONST_0);
            methodVisitor.visitVarInsn(ALOAD, 11);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "length", "()I", false);
            methodVisitor.visitInsn(ICONST_1);
            methodVisitor.visitInsn(ISUB);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "substring", "(II)Ljava/lang/String;", false);
            methodVisitor.visitVarInsn(ASTORE, 11);
            methodVisitor.visitJumpInsn(GOTO, label39);
            methodVisitor.visitLabel(label41);
            methodVisitor.visitLineNumber(159, label41);
            methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "appeng/client/gui/implementations/GuiInterfaceTerminal", "fontRendererObj", "Lnet/minecraft/client/gui/FontRenderer;");
            methodVisitor.visitVarInsn(ALOAD, 11);
            methodVisitor.visitIntInsn(BIPUSH, 10);
            methodVisitor.visitIntInsn(BIPUSH, 6);
            methodVisitor.visitVarInsn(ILOAD, 8);
            methodVisitor.visitInsn(IADD);
            methodVisitor.visitLdcInsn(new Integer(4210752));
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/client/gui/FontRenderer", "drawString", "(Ljava/lang/String;III)I", false);
            methodVisitor.visitInsn(POP);
            methodVisitor.visitLabel(label35);
            methodVisitor.visitLineNumber(161, label35);
            methodVisitor.visitFrame(Opcodes.F_CHOP, 2, null, 0, null);
            methodVisitor.visitIincInsn(8, 18);
            Label label43 = new Label();
            methodVisitor.visitLabel(label43);
            methodVisitor.visitLineNumber(129, label43);
            methodVisitor.visitIincInsn(9, 1);
            methodVisitor.visitJumpInsn(GOTO, label12);
            methodVisitor.visitLabel(label13);
            methodVisitor.visitLineNumber(163, label13);
            methodVisitor.visitFrame(Opcodes.F_CHOP, 2, null, 0, null);
            methodVisitor.visitInsn(RETURN);
            Label label44 = new Label();
            methodVisitor.visitLabel(label44);
            methodVisitor.visitLocalVariable("slot", "Ljava/lang/Object;", null, label7, label8, 7);
            methodVisitor.visitLocalVariable("z", "I", null, label28, label29, 15);
            methodVisitor.visitLocalVariable("a", "I", null, label23, label24, 14);
            methodVisitor.visitLocalVariable("y", "I", null, label22, label20, 13);
            methodVisitor.visitLocalVariable("inv", "Lappeng/client/me/ClientDCInternalInv;", null, label18, label20, 11);
            methodVisitor.visitLocalVariable("size", "I", null, label19, label20, 12);
            methodVisitor.visitLocalVariable("name", "Ljava/lang/String;", null, label37, label35, 11);
            methodVisitor.visitLocalVariable("rows", "I", null, label38, label35, 12);
            methodVisitor.visitLocalVariable("lineObj", "Ljava/lang/Object;", null, label15, label43, 10);
            methodVisitor.visitLocalVariable("x", "I", null, label12, label13, 9);
            methodVisitor.visitLocalVariable("this", "Lappeng/client/gui/implementations/GuiInterfaceTerminal;", null, label0, label44, 0);
            methodVisitor.visitLocalVariable("offsetX", "I", null, label0, label44, 1);
            methodVisitor.visitLocalVariable("offsetY", "I", null, label0, label44, 2);
            methodVisitor.visitLocalVariable("mouseX", "I", null, label0, label44, 3);
            methodVisitor.visitLocalVariable("mouseY", "I", null, label0, label44, 4);
            methodVisitor.visitLocalVariable("ex", "I", null, label3, label44, 5);
            methodVisitor.visitLocalVariable("iterator", "Ljava/util/Iterator;", null, label4, label44, 6);
            methodVisitor.visitLocalVariable("over", "I", null, label10, label44, 7);
            methodVisitor.visitLocalVariable("offset", "I", null, label11, label44, 8);
            //methodVisitor.visitMaxs(8, 16);
            methodVisitor.visitEnd();
        }
        {
            methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "drawBG", "(IIII)V", null, null);
            methodVisitor.visitCode();
            Label label0 = new Label();
            methodVisitor.visitLabel(label0);
            methodVisitor.visitLineNumber(166, label0);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitLdcInsn("guis/interfaceterminal.png");
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "appeng/client/gui/implementations/GuiInterfaceTerminal", "bindTexture", "(Ljava/lang/String;)V", false);
            Label label1 = new Label();
            methodVisitor.visitLabel(label1);
            methodVisitor.visitLineNumber(167, label1);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitVarInsn(ILOAD, 1);
            methodVisitor.visitVarInsn(ILOAD, 2);
            methodVisitor.visitInsn(ICONST_0);
            methodVisitor.visitInsn(ICONST_0);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "appeng/client/gui/implementations/GuiInterfaceTerminal", "xSize", "I");
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "appeng/client/gui/implementations/GuiInterfaceTerminal", "ySize", "I");
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "appeng/client/gui/implementations/GuiInterfaceTerminal", "drawTexturedModalRect", "(IIIIII)V", false);
            Label label2 = new Label();
            methodVisitor.visitLabel(label2);
            methodVisitor.visitLineNumber(169, label2);
            methodVisitor.visitInsn(ICONST_0);
            methodVisitor.visitVarInsn(ISTORE, 5);
            Label label3 = new Label();
            methodVisitor.visitLabel(label3);
            methodVisitor.visitLineNumber(170, label3);
            methodVisitor.visitIntInsn(BIPUSH, 17);
            methodVisitor.visitVarInsn(ISTORE, 6);
            Label label4 = new Label();
            methodVisitor.visitLabel(label4);
            methodVisitor.visitLineNumber(171, label4);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "appeng/client/gui/implementations/GuiInterfaceTerminal", "getScrollBar", "()Lappeng/client/gui/widgets/GuiScrollbar;", false);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "appeng/client/gui/widgets/GuiScrollbar", "getCurrentScroll", "()I", false);
            methodVisitor.visitVarInsn(ISTORE, 7);
            Label label5 = new Label();
            methodVisitor.visitLabel(label5);
            methodVisitor.visitLineNumber(172, label5);
            methodVisitor.visitInsn(ICONST_0);
            methodVisitor.visitVarInsn(ISTORE, 8);
            Label label6 = new Label();
            methodVisitor.visitLabel(label6);
            methodVisitor.visitFrame(Opcodes.F_FULL, 9, new Object[]{"appeng/client/gui/implementations/GuiInterfaceTerminal", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER}, 0, new Object[]{});
            methodVisitor.visitVarInsn(ILOAD, 8);
            methodVisitor.visitVarInsn(ILOAD, 5);
            methodVisitor.visitInsn(IADD);
            methodVisitor.visitFieldInsn(GETSTATIC, "appeng/client/gui/implementations/GuiInterfaceTerminal", "LINES_ON_PAGE", "I");
            Label label7 = new Label();
            methodVisitor.visitJumpInsn(IF_ICMPGE, label7);
            methodVisitor.visitVarInsn(ILOAD, 7);
            methodVisitor.visitVarInsn(ILOAD, 8);
            methodVisitor.visitInsn(IADD);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "appeng/client/gui/implementations/GuiInterfaceTerminal", "lines", "Ljava/util/ArrayList;");
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/util/ArrayList", "size", "()I", false);
            methodVisitor.visitJumpInsn(IF_ICMPGE, label7);
            Label label8 = new Label();
            methodVisitor.visitLabel(label8);
            methodVisitor.visitLineNumber(174, label8);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "appeng/client/gui/implementations/GuiInterfaceTerminal", "lines", "Ljava/util/ArrayList;");
            methodVisitor.visitVarInsn(ILOAD, 7);
            methodVisitor.visitVarInsn(ILOAD, 8);
            methodVisitor.visitInsn(IADD);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/util/ArrayList", "get", "(I)Ljava/lang/Object;", false);
            methodVisitor.visitVarInsn(ASTORE, 9);
            Label label9 = new Label();
            methodVisitor.visitLabel(label9);
            methodVisitor.visitLineNumber(175, label9);
            methodVisitor.visitVarInsn(ALOAD, 9);
            methodVisitor.visitTypeInsn(INSTANCEOF, "appeng/client/me/ClientDCInternalInv");
            Label label10 = new Label();
            methodVisitor.visitJumpInsn(IFEQ, label10);
            Label label11 = new Label();
            methodVisitor.visitLabel(label11);
            methodVisitor.visitLineNumber(176, label11);
            methodVisitor.visitVarInsn(ALOAD, 9);
            methodVisitor.visitTypeInsn(CHECKCAST, "appeng/client/me/ClientDCInternalInv");
            methodVisitor.visitVarInsn(ASTORE, 10);
            Label label12 = new Label();
            methodVisitor.visitLabel(label12);
            methodVisitor.visitLineNumber(178, label12);
            methodVisitor.visitInsn(FCONST_1);
            methodVisitor.visitInsn(FCONST_1);
            methodVisitor.visitInsn(FCONST_1);
            methodVisitor.visitInsn(FCONST_1);
            methodVisitor.visitMethodInsn(INVOKESTATIC, "org/lwjgl/opengl/GL11", "glColor4f", "(FFFF)V", false);
            Label label13 = new Label();
            methodVisitor.visitLabel(label13);
            methodVisitor.visitLineNumber(179, label13);
            methodVisitor.visitVarInsn(ALOAD, 10);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "appeng/client/me/ClientDCInternalInv", "getInventory", "()Lappeng/tile/inventory/AppEngInternalInventory;", false);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "appeng/tile/inventory/AppEngInternalInventory", "getSizeInventory", "()I", false);
            methodVisitor.visitIntInsn(BIPUSH, 9);
            methodVisitor.visitInsn(IREM);
            methodVisitor.visitJumpInsn(IFNE, label10);
            Label label14 = new Label();
            methodVisitor.visitLabel(label14);
            methodVisitor.visitLineNumber(180, label14);
            methodVisitor.visitVarInsn(ALOAD, 10);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "appeng/client/me/ClientDCInternalInv", "getInventory", "()Lappeng/tile/inventory/AppEngInternalInventory;", false);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "appeng/tile/inventory/AppEngInternalInventory", "getSizeInventory", "()I", false);
            methodVisitor.visitIntInsn(BIPUSH, 9);
            methodVisitor.visitInsn(IDIV);
            methodVisitor.visitVarInsn(ISTORE, 11);
            Label label15 = new Label();
            methodVisitor.visitLabel(label15);
            methodVisitor.visitLineNumber(181, label15);
            methodVisitor.visitInsn(ICONST_0);
            methodVisitor.visitVarInsn(ISTORE, 12);
            Label label16 = new Label();
            methodVisitor.visitLabel(label16);
            methodVisitor.visitFrame(Opcodes.F_FULL, 13, new Object[]{"appeng/client/gui/implementations/GuiInterfaceTerminal", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, "java/lang/Object", "appeng/client/me/ClientDCInternalInv", Opcodes.INTEGER, Opcodes.INTEGER}, 0, new Object[]{});
            methodVisitor.visitVarInsn(ILOAD, 12);
            methodVisitor.visitVarInsn(ILOAD, 11);
            Label label17 = new Label();
            methodVisitor.visitJumpInsn(IF_ICMPGE, label17);
            Label label18 = new Label();
            methodVisitor.visitLabel(label18);
            methodVisitor.visitLineNumber(182, label18);
            methodVisitor.visitVarInsn(ILOAD, 8);
            methodVisitor.visitVarInsn(ILOAD, 5);
            methodVisitor.visitInsn(IADD);
            methodVisitor.visitFieldInsn(GETSTATIC, "appeng/client/gui/implementations/GuiInterfaceTerminal", "LINES_ON_PAGE", "I");
            Label label19 = new Label();
            methodVisitor.visitJumpInsn(IF_ICMPLT, label19);
            Label label20 = new Label();
            methodVisitor.visitLabel(label20);
            methodVisitor.visitLineNumber(183, label20);
            methodVisitor.visitJumpInsn(GOTO, label17);
            methodVisitor.visitLabel(label19);
            methodVisitor.visitLineNumber(184, label19);
            methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            methodVisitor.visitIntInsn(SIPUSH, 162);
            methodVisitor.visitVarInsn(ISTORE, 13);
            Label label21 = new Label();
            methodVisitor.visitLabel(label21);
            methodVisitor.visitLineNumber(185, label21);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitVarInsn(ILOAD, 1);
            methodVisitor.visitIntInsn(BIPUSH, 7);
            methodVisitor.visitInsn(IADD);
            methodVisitor.visitVarInsn(ILOAD, 2);
            methodVisitor.visitVarInsn(ILOAD, 6);
            methodVisitor.visitInsn(IADD);
            methodVisitor.visitIntInsn(BIPUSH, 7);
            methodVisitor.visitIntInsn(SIPUSH, 139);
            methodVisitor.visitIntInsn(SIPUSH, 162);
            methodVisitor.visitIntInsn(BIPUSH, 18);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "appeng/client/gui/implementations/GuiInterfaceTerminal", "drawTexturedModalRect", "(IIIIII)V", false);
            Label label22 = new Label();
            methodVisitor.visitLabel(label22);
            methodVisitor.visitLineNumber(186, label22);
            methodVisitor.visitIincInsn(6, 18);
            Label label23 = new Label();
            methodVisitor.visitLabel(label23);
            methodVisitor.visitLineNumber(187, label23);
            methodVisitor.visitIincInsn(5, 1);
            Label label24 = new Label();
            methodVisitor.visitLabel(label24);
            methodVisitor.visitLineNumber(181, label24);
            methodVisitor.visitIincInsn(12, 1);
            methodVisitor.visitJumpInsn(GOTO, label16);
            methodVisitor.visitLabel(label17);
            methodVisitor.visitLineNumber(189, label17);
            methodVisitor.visitFrame(Opcodes.F_CHOP, 1, null, 0, null);
            methodVisitor.visitIincInsn(5, -1);
            Label label25 = new Label();
            methodVisitor.visitLabel(label25);
            methodVisitor.visitLineNumber(190, label25);
            methodVisitor.visitIincInsn(6, -18);
            methodVisitor.visitLabel(label10);
            methodVisitor.visitLineNumber(193, label10);
            methodVisitor.visitFrame(Opcodes.F_CHOP, 2, null, 0, null);
            methodVisitor.visitIincInsn(6, 18);
            Label label26 = new Label();
            methodVisitor.visitLabel(label26);
            methodVisitor.visitLineNumber(172, label26);
            methodVisitor.visitIincInsn(8, 1);
            methodVisitor.visitJumpInsn(GOTO, label6);
            methodVisitor.visitLabel(label7);
            methodVisitor.visitLineNumber(196, label7);
            methodVisitor.visitFrame(Opcodes.F_CHOP, 2, null, 0, null);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "appeng/client/gui/implementations/GuiInterfaceTerminal", "searchField", "Lappeng/client/gui/widgets/MEGuiTextField;");
            Label label27 = new Label();
            methodVisitor.visitJumpInsn(IFNULL, label27);
            Label label28 = new Label();
            methodVisitor.visitLabel(label28);
            methodVisitor.visitLineNumber(197, label28);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "appeng/client/gui/implementations/GuiInterfaceTerminal", "searchField", "Lappeng/client/gui/widgets/MEGuiTextField;");
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "appeng/client/gui/widgets/MEGuiTextField", "drawTextBox", "()V", false);
            methodVisitor.visitLabel(label27);
            methodVisitor.visitLineNumber(199, label27);
            methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            methodVisitor.visitInsn(RETURN);
            Label label29 = new Label();
            methodVisitor.visitLabel(label29);
            methodVisitor.visitLocalVariable("width", "I", null, label21, label24, 13);
            methodVisitor.visitLocalVariable("i", "I", null, label16, label17, 12);
            methodVisitor.visitLocalVariable("y", "I", null, label15, label10, 11);
            methodVisitor.visitLocalVariable("inv", "Lappeng/client/me/ClientDCInternalInv;", null, label12, label10, 10);
            methodVisitor.visitLocalVariable("lineObj", "Ljava/lang/Object;", null, label9, label26, 9);
            methodVisitor.visitLocalVariable("x", "I", null, label6, label7, 8);
            methodVisitor.visitLocalVariable("this", "Lappeng/client/gui/implementations/GuiInterfaceTerminal;", null, label0, label29, 0);
            methodVisitor.visitLocalVariable("offsetX", "I", null, label0, label29, 1);
            methodVisitor.visitLocalVariable("offsetY", "I", null, label0, label29, 2);
            methodVisitor.visitLocalVariable("mouseX", "I", null, label0, label29, 3);
            methodVisitor.visitLocalVariable("mouseY", "I", null, label0, label29, 4);
            methodVisitor.visitLocalVariable("over", "I", null, label3, label29, 5);
            methodVisitor.visitLocalVariable("offset", "I", null, label4, label29, 6);
            methodVisitor.visitLocalVariable("ex", "I", null, label5, label29, 7);
            //methodVisitor.visitMaxs(7, 14);
            methodVisitor.visitEnd();
        }
        {
            methodVisitor = classWriter.visitMethod(ACC_PRIVATE, "refreshListMixin", "()V", null, null);
            methodVisitor.visitCode();
            Label label0 = new Label();
            methodVisitor.visitLabel(label0);
            methodVisitor.visitLineNumber(203, label0);
            methodVisitor.visitInsn(ICONST_0);
            methodVisitor.visitVarInsn(ISTORE, 2);
            Label label1 = new Label();
            methodVisitor.visitLabel(label1);
            methodVisitor.visitLineNumber(204, label1);
            methodVisitor.visitInsn(ICONST_0);
            methodVisitor.visitVarInsn(ISTORE, 3);
            Label label2 = new Label();
            methodVisitor.visitLabel(label2);
            methodVisitor.visitLineNumber(205, label2);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "appeng/client/gui/implementations/GuiInterfaceTerminal", "counts", "Ljava/util/HashMap;");
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/util/HashMap", "entrySet", "()Ljava/util/Set;", false);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/util/Set", "iterator", "()Ljava/util/Iterator;", true);
            methodVisitor.visitVarInsn(ASTORE, 4);
            Label label3 = new Label();
            methodVisitor.visitLabel(label3);
            methodVisitor.visitFrame(Opcodes.F_APPEND, 3, new Object[]{Opcodes.INTEGER, Opcodes.INTEGER, "java/util/Iterator"}, 0, null);
            methodVisitor.visitVarInsn(ALOAD, 4);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/util/Iterator", "hasNext", "()Z", true);
            Label label4 = new Label();
            methodVisitor.visitJumpInsn(IFEQ, label4);
            methodVisitor.visitVarInsn(ALOAD, 4);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/util/Iterator", "next", "()Ljava/lang/Object;", true);
            methodVisitor.visitTypeInsn(CHECKCAST, "java/util/Map$Entry");
            methodVisitor.visitVarInsn(ASTORE, 5);
            Label label5 = new Label();
            methodVisitor.visitLabel(label5);
            methodVisitor.visitLineNumber(206, label5);
            methodVisitor.visitVarInsn(ALOAD, 5);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/util/Map$Entry", "getKey", "()Ljava/lang/Object;", true);
            methodVisitor.visitTypeInsn(CHECKCAST, "java/lang/Integer");
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Integer", "intValue", "()I", false);
            methodVisitor.visitVarInsn(ALOAD, 5);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/util/Map$Entry", "getValue", "()Ljava/lang/Object;", true);
            methodVisitor.visitTypeInsn(CHECKCAST, "java/lang/Integer");
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Integer", "intValue", "()I", false);
            methodVisitor.visitInsn(IMUL);
            methodVisitor.visitInsn(I2D);
            methodVisitor.visitLdcInsn(new Double("3.0"));
            methodVisitor.visitInsn(DDIV);
            methodVisitor.visitMethodInsn(INVOKESTATIC, "java/lang/Math", "ceil", "(D)D", false);
            methodVisitor.visitInsn(D2I);
            methodVisitor.visitVarInsn(ISTORE, 6);
            Label label6 = new Label();
            methodVisitor.visitLabel(label6);
            methodVisitor.visitLineNumber(207, label6);
            methodVisitor.visitVarInsn(ILOAD, 3);
            methodVisitor.visitVarInsn(ILOAD, 6);
            methodVisitor.visitInsn(ICONST_3);
            methodVisitor.visitInsn(IMUL);
            methodVisitor.visitVarInsn(ALOAD, 5);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/util/Map$Entry", "getKey", "()Ljava/lang/Object;", true);
            methodVisitor.visitTypeInsn(CHECKCAST, "java/lang/Integer");
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Integer", "intValue", "()I", false);
            methodVisitor.visitVarInsn(ALOAD, 5);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/util/Map$Entry", "getValue", "()Ljava/lang/Object;", true);
            methodVisitor.visitTypeInsn(CHECKCAST, "java/lang/Integer");
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Integer", "intValue", "()I", false);
            methodVisitor.visitInsn(IMUL);
            methodVisitor.visitInsn(ISUB);
            methodVisitor.visitInsn(IADD);
            methodVisitor.visitVarInsn(ISTORE, 3);
            Label label7 = new Label();
            methodVisitor.visitLabel(label7);
            methodVisitor.visitLineNumber(208, label7);
            methodVisitor.visitVarInsn(ILOAD, 2);
            methodVisitor.visitVarInsn(ILOAD, 6);
            methodVisitor.visitInsn(IADD);
            methodVisitor.visitVarInsn(ISTORE, 2);
            Label label8 = new Label();
            methodVisitor.visitLabel(label8);
            methodVisitor.visitLineNumber(209, label8);
            methodVisitor.visitJumpInsn(GOTO, label3);
            methodVisitor.visitLabel(label4);
            methodVisitor.visitLineNumber(210, label4);
            methodVisitor.visitFrame(Opcodes.F_CHOP, 1, null, 0, null);
            methodVisitor.visitVarInsn(ILOAD, 2);
            methodVisitor.visitVarInsn(ILOAD, 3);
            methodVisitor.visitInsn(ICONST_3);
            methodVisitor.visitInsn(IDIV);
            methodVisitor.visitInsn(ISUB);
            methodVisitor.visitVarInsn(ISTORE, 2);
            Label label9 = new Label();
            methodVisitor.visitLabel(label9);
            methodVisitor.visitLineNumber(211, label9);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "appeng/client/gui/implementations/GuiInterfaceTerminal", "getScrollBar", "()Lappeng/client/gui/widgets/GuiScrollbar;", false);
            methodVisitor.visitInsn(ICONST_0);
            methodVisitor.visitVarInsn(ILOAD, 2);
            methodVisitor.visitInsn(ICONST_2);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "appeng/client/gui/widgets/GuiScrollbar", "setRange", "(III)V", false);
            Label label10 = new Label();
            methodVisitor.visitLabel(label10);
            methodVisitor.visitLineNumber(212, label10);
            methodVisitor.visitInsn(RETURN);
            Label label11 = new Label();
            methodVisitor.visitLabel(label11);
            methodVisitor.visitLocalVariable("c", "I", null, label6, label8, 6);
            methodVisitor.visitLocalVariable("entry", "Ljava/util/Map$Entry;", "Ljava/util/Map$Entry<Ljava/lang/Integer;Ljava/lang/Integer;>;", label5, label8, 5);
            methodVisitor.visitLocalVariable("this", "Lappeng/client/gui/implementations/GuiInterfaceTerminal;", null, label0, label11, 0);
            methodVisitor.visitLocalVariable("size", "I", null, label1, label11, 2);
            methodVisitor.visitLocalVariable("unused", "I", null, label2, label11, 3);
            //methodVisitor.visitMaxs(4, 7);
            methodVisitor.visitEnd();
        }

        ClassNode generatedNode = readClass(classWriter.toByteArray());
        for(MethodNode node : generatedNode.methods) {
            if(node.name.equals("<init>")) continue;
            MethodNode original = findMethod(classNode, node.name);
            if(original != null) {
                classNode.methods.remove(original);
            }
            classNode.methods.add(node);
        }

        MethodNode methodNodeC = findMethod(classNode, "<init>");
        if(methodNodeC == null) return basicClass;
        List<AbstractInsnNode> pointsC = findAllOpcodes(methodNodeC.instructions, RETURN);
        if(pointsC.isEmpty()) return basicClass;
        InsnList listC = new InsnList();
        listC.add(new VarInsnNode(ALOAD,0));
        listC.add(new TypeInsnNode(NEW, "java/util/HashMap"));
        listC.add(new InsnNode(DUP));
        listC.add(new MethodInsnNode(INVOKESPECIAL ,"java/util/HashMap", "<init>", "()V", false));
        listC.add(new FieldInsnNode(PUTFIELD, "appeng/client/gui/implementations/GuiInterfaceTerminal", "counts", "Ljava/util/HashMap;"));
        pointsC.forEach(point -> methodNodeC.instructions.insertBefore(point, listC));

        return writeClass(classNode);
    }
}
